<?php
/**
 * @file
 * Custom module for the CPS Admin application
 * By Nectar Software Ltd
 */

/**
 * Implements hook_form_alter() to adjust the core node forms.
 * Mainly I am hidding the entry date fields for charge and payment creations. 
 */
function CPSmodule_form_alter(&$form, &$form_state, $form_id) {
  switch($form_id) {
    case "charge_node_form":
        $form['field_charge_date_entered']['#access'] = 0;
      break;
  }
}

/**use the payment form alter hook to set the owner**/
function CPSmodule_form_payment_node_form_alter(&$form, &$form_state, $form_id) {
  $form['field_payment_date_entered']['#access'] = 0;
/**  $arg_array = arg();
  $nid = end($arg_array);
  **/
  $nid = arg(3);
  if($nid !== NULL) { 
    $prop_node = node_load($nid);
    $onid = $prop_node->field_property_owner['und'][0]['target_id'];
//  dpm($onid);
    $own_node = node_load($onid);
    $form['field_payment_owner']["und"][0]['target_id']['#default_value'] = $own_node->title;
  }
//Delete these when I am sure I don't need them. 
  unset($form['field_payment_allocation'][LANGUAGE_NONE][0]['field_payment_service_charge']); 
  unset($form['field_payment_allocation'][LANGUAGE_NONE][0]['field_payment_sc_date']);
  dpm($form);
}

/**
 * Implementation of hook_menu().
 * Create a page that is the access page to create new payment. All payments in the system 
 * will be created via this route action. 
 */
function CPSmodule_menu() {

  $items['payment_by_code'] = array(
    'title' => 'Add new payment',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('add_payment_by_code_form'),
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM
  );
  
  return $items;
}

/**
* Define a form. The entry form for adding the apartment code for payment. 
*/
function add_payment_by_code_form() {
  $form['add_payment'] = array(
    '#title' => t('Payment code'),
    '#type' => 'textfield',
    '#description' => t('Please enter the CPS payment code.'),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit')
  );

  return $form;
}

/** When the form is submitted we get the nid for the property that the payment is made against pass it 
 * to the add payment form via the URL. ::ISSUE 1::
 **/
function add_payment_by_code_form_submit($form, &$form_state) {
  $title = $form_state['values']['add_payment'];
  $type = 'property';
  $result = db_query("SELECT n.nid FROM {node} n WHERE n.title = :title AND n.type = :type", array(":title"=> $title, ":type"=> $type));  
  $nid = $result->fetchField();
  if($nid !== FALSE) { 
    $form_state['redirect'] = 'node/add/payment/'.$nid;
  } else {
    drupal_set_message("There is no property registered to that CPS code");
  }
  $_SESSION['user_input'] = $form_state['values'];
}


/** Instead I use the development module and dpm() to see what is going on behind the scenes. 
Write the name of the form you load to the log file for debugging help
  watchdog('CPSmodule', 'The form is called: %form_id', array('%form_id' => $form_id)); 
**/

?>

